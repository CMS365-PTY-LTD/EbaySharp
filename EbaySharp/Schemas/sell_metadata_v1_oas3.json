{
  "openapi": "3.0.0",
  "info": {
    "title": "Metadata API",
    "description": "The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.",
    "contact": {
      "name": "eBay Inc,"
    },
    "license": {
      "name": "eBay API License Agreement",
      "url": "https://go.developer.ebay.com/api-license-agreement"
    },
    "version": "v1.7.1"
  },
  "servers": [
    {
      "url": "https://api.ebay.com{basePath}",
      "description": "Production",
      "variables": {
        "basePath": {
          "default": "/sell/metadata/v1"
        }
      }
    }
  ],
  "paths": {
    "/marketplace/{marketplace_id}/get_automotive_parts_compatibility_policies": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "This method returns the eBay policies that define how to list automotive-parts-compatibility items in the categories of a specific marketplace.  <br><br>By default, this method returns the entire category tree for the specified marketplace. You can limit the size of the result set by using the <b>filter</b> query parameter to specify only the category IDs you want to review.<br><br><span class=\"tablenote\"><span style=\"color:#478415\"><strong>Tip:</strong></span> This method can potentially return a very large response payload. eBay recommends that the response payload be compressed by passing in the <b>Accept-Encoding</b> request header and setting the value to <code>gzip</code>.</span>",
        "operationId": "getAutomotivePartsCompatibilityPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "This query parameter limits the response by returning policy information for only the selected sections of the category tree. Supply <b>categoryId</b> values for the sections of the tree you want returned. Use the <a href=\"/api-docs/commerce/taxonomy/overview.html\" target=\"_blank \">Taxonomy API</a> to retrieve category ID values.<br><br>When you specify a <b>categoryId</b> value, the returned category tree includes the policies for that parent node, plus the policies for any leaf nodes below the at parent node.  <br><br>The parameter takes a list of <b>categoryId</b> values and you can specify up to 50 separate category IDs. Separate multiple values with a pipe character ('|'). If you specify more than 50 <code>categoryId</code> values, eBay returns the policies for the first 50 IDs and a warning that not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note that you must URL-encode the parameter list, which results in the following filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketplace_id",
            "in": "path",
            "description": "This path parameter specifies the eBay marketplace for which policy information is retrieved.  <br><br><span class=\"tablenote\"><b>Note: </b>Only the following eBay marketplaces support automotive parts compatibility: <ul> <li>EBAY_US</li> <li>EBAY_AU</li> <li>EBAY_CA</li> <li>EBAY_DE</li> <li>EBAY_ES</li> <li>EBAY_FR</li> <li>EBAY_GB</li> <li>EBAY_IT</li><ul></span>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "This header indicates the compression-encoding algorithms the client accepts for the response. This value should be set to <code>gzip</code>. <br><br> For more information, refer to <a href=\"/api-docs/static/rest-request-components.html#HTTP\" target=\"_blank \">HTTP request headers</a>.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomotivePartsCompatibilityPolicyResponse"
                }
              }
            },
            "x-response-codes": {
              "errors": {
                "46002": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The filter value is invalid. Sample supported values: filter=categoryIds:{catId1|catId2|catId3}."
                },
                "46003": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified categoryId was not found for the marketplace."
                },
                "46004": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Only 50 Category IDs specified in the filter are considered."
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad Request",
            "x-response-codes": {
              "errors": {
                "46001": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified marketplace ID was not found."
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error",
            "x-response-codes": {
              "errors": {
                "46000": {
                  "domain": "API_METADATA",
                  "category": "APPLICATION",
                  "description": "There was a problem with an eBay internal system or process. Contact eBay developer support for assistance."
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope"
            ]
          }
        ]
      }
    },
    "/marketplace/{marketplace_id}/get_extended_producer_responsibility_policies": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "This method returns the Extended Producer Responsibility policies for one, multiple, or all eBay categories in an eBay marketplace.<br><br>The identifier of the eBay marketplace is passed in as a path parameter, and unless one or more eBay category IDs are passed in through the filter query parameter, this method will return metadata on every applicable category for the specified marketplace.<br><br><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> Currently, the Extended Producer Responsibility policies are only applicable to a limited number of categories.</span><br><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note: </strong></span>Extended Producer Responsibility IDs are no longer set at the listing level so category-level metadata is no longer returned. Instead, sellers will provide/manage these IDs at the account level by going to <a href=\"https://accountsettings.ebay.fr/epr-fr \" target=\"_blank\">Account Settings</a>.</span><br><span class=\"tablenote\"><span style=\"color:#478415\"><strong>Tip:</strong></span> This method can potentially return a very large response payload. eBay recommends that the response payload be compressed by passing in the <b>Accept-Encoding</b> request header and setting the value to <code>gzip</code>.</span>",
        "operationId": "getExtendedProducerResponsibilityPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "A query parameter that can be used to limit the response by returning policy information for only the selected sections of the category tree. Supply <b>categoryId</b> values for the sections of the tree that should be returned.<br><br>When a <b>categoryId</b> value is specified, the returned category tree includes the policies for that parent node, as well as the policies for any child nodes below that parent node.<br><br>Pass in the <b>categoryId</b> values using a URL-encoded, pipe-separated ('|') list. For example:<br><br><code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code><br><br><b>Maximum:</b> 50",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketplace_id",
            "in": "path",
            "description": "This path parameter specifies the eBay marketplace for which policy information shall be retrieved.<br><br>See <a href=\"/api-docs/static/rest-request-components.html#marketpl\" target=\"_blank\">HTTP Request Headers</a> for a list of supported eBay marketplace ID values.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "This header indicates the compression-encoding algorithms the client accepts for the response. This value should be set to <code>gzip</code>. <br><br> For more information, refer to <a href=\"/api-docs/static/rest-request-components.html#HTTP\" target=\"_blank \">HTTP request headers</a>.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedProducerResponsibilityPolicyResponse"
                }
              }
            },
            "x-response-codes": {
              "errors": {
                "46002": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The filter value is invalid. Sample supported values: filter=categoryIds:{catId1|catId2|catId3}."
                },
                "46003": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified categoryId was not found for the marketplace."
                },
                "46004": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Only 50 Category IDs specified in the filter are considered."
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad Request",
            "x-response-codes": {
              "errors": {
                "46001": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified marketplace ID was not found."
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error",
            "x-response-codes": {
              "errors": {
                "46000": {
                  "domain": "API_METADATA",
                  "category": "APPLICATION",
                  "description": "There was a problem with an eBay internal system or process.Contact eBay developer support for assistance."
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope"
            ]
          }
        ]
      }
    },
    "/marketplace/{marketplace_id}/get_hazardous_materials_labels": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "This method returns hazardous materials label information for the specified eBay marketplace. The information includes IDs, descriptions, and URLs (as applicable) for the available signal words, statements, and pictograms. The returned statements are localized for the default langauge of the marketplace. If a marketplace does not support hazardous materials label information, an error is returned.<p>This information is used by the seller to add hazardous materials label related information to their listings (see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html'>Specifying hazardous material related information</a>).</p>",
        "operationId": "getHazardousMaterialsLabels",
        "parameters": [
          {
            "name": "marketplace_id",
            "in": "path",
            "description": "This path parameter specifies the eBay marketplace for which hazardous materials label information shall be retrieved.<br><br>See <a href=\"/api-docs/static/rest-request-components.html#marketpl\" target=\"_blank\">HTTP Request Headers</a> for a list of supported eBay marketplace ID values.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HazardousMaterialDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "x-response-codes": {
              "errors": {
                "46001": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified marketplace ID was not found."
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error",
            "x-response-codes": {
              "errors": {
                "46000": {
                  "domain": "API_METADATA",
                  "category": "APPLICATION",
                  "description": "There was a problem with an eBay internal system or process.Contact eBay developer support for assistance."
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope"
            ]
          }
        ]
      }
    },
    "/marketplace/{marketplace_id}/get_item_condition_policies": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "This method returns item condition metadata on one, multiple, or all eBay categories on an eBay marketplace. This metadata consists of the different item conditions (with IDs) that an eBay category supports, and a boolean to indicate if an eBay category requires an item condition. <br><br>If applicable, this metadata also shows the different condition descriptors (with IDs) that an eBay category supports.<br><br><span class=\"tablenote\"><b>Note:</b> Currently, condition grading is only applicable to the following trading card categories: <ul><li>Non-Sport Trading Card Singles</li><li>CCG Individual Cards</li><li>Sports Trading Cards Singles</li></ul></span><br>The identifier of the eBay marketplace is passed in as a path parameter, and unless one or more eBay category IDs are passed in through the <b>filter</b> query parameter, this method will return metadata on every single category for the specified marketplace. If you only want to view item condition metadata for one eBay category or a select group of eBay categories, you can pass in up to 50 eBay category ID through the <b>filter</b> query parameter.<br><br><span class=\"tablenote\"><span style=\"color:#FF0000\"><strong>Important:</strong></span> <b>Certified - Refurbished</b>-eligible sellers, and sellers who are eligible to list with the new values (EXCELLENT_REFURBISHED, VERY_GOOD_REFURBISHED, and GOOD_REFURBISHED) must use an OAuth token created with the <a href=\"/api-docs/static/oauth-authorization-code-grant.html\" target=\"_blank\">authorization code grant flow</a> and <b>https://api.ebay.com/oauth/api_scope/sell.inventory</b> scope in order to retrieve the refurbished conditions for the relevant categories.<br/><br/>See the <a href=\"/api-docs/sell/static/metadata/condition-id-values.html#Category \" target=\"_blank\">eBay Refurbished Program - Category and marketplace support</a> topic for the categories and marketplaces that support these refurbished conditions<br/><br/>These restricted item conditions will not be returned if an OAuth token created with the <a href=\"/api-docs/static/oauth-client-credentials-grant.html\" target=\"_blank\">client credentials grant flow</a> and <b>https://api.ebay.com/oauth/api_scope</b> scope is used, or if any seller is not eligible to list with that item condition. <br/><br/> See the <a href=\"/api-docs/static/oauth-scopes.html\" target=\"_blank\">Specifying OAuth scopes</a> topic for more information about specifying scopes.</span><br><br><span class=\"tablenote\"><span style=\"color:#478415\"><strong>Tip:</strong></span> This method can potentially return a very large response payload. eBay recommends that the response payload be compressed by passing in the <b>Accept-Encoding</b> request header and setting the value to <code>gzip</code>.</span>",
        "operationId": "getItemConditionPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "This query parameter limits the response by returning policy information for only the selected sections of the category tree. Supply <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When you specify a <b>categoryId</b> value, the returned category tree includes the policies for that parent node, plus the policies for any leaf nodes below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b> values and you can specify up to 50 separate category IDs. Separate multiple values with a pipe character ('|'). If you specify more than 50 <code>categoryId</code> values, eBay returns the policies for the first 50 IDs and a warning that not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note that you must URL-encode the parameter list, which results in the following filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketplace_id",
            "in": "path",
            "description": "This path parameter specifies the eBay marketplace for which policy information is retrieved.<br><br>See <a href=\"/api-docs/static/rest-request-components.html#marketpl\" target=\"_blank\">HTTP Request Headers</a> for a list of supported eBay marketplace ID values.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "This header indicates the compression-encoding algorithms the client accepts for the response. This value should be set to <code>gzip</code>. <br><br> For more information, refer to <a href=\"/api-docs/static/rest-request-components.html#HTTP\" target=\"_blank \">HTTP request headers</a>.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemConditionPolicyResponse"
                }
              }
            },
            "x-response-codes": {
              "errors": {
                "46002": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The filter value is invalid. Sample supported values: filter=categoryIds:{catId1|catId2|catId3}."
                },
                "46003": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified categoryId was not found for the marketplace."
                },
                "46004": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Only 50 Category IDs specified in the filter are considered."
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad Request",
            "x-response-codes": {
              "errors": {
                "46001": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified marketplace ID was not found."
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error",
            "x-response-codes": {
              "errors": {
                "46000": {
                  "domain": "API_METADATA",
                  "category": "APPLICATION",
                  "description": "There was a problem with an eBay internal system or process. Contact eBay developer support for assistance."
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope",
              "https://api.ebay.com/oauth/api_scope/sell.inventory"
            ]
          }
        ]
      }
    },
    "/marketplace/{marketplace_id}/get_listing_structure_policies": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "This method returns the eBay policies that define the allowed listing structures for the categories of a specific marketplace. The listing-structure policies currently pertain to whether or not you can list items with variations.  <br><br>By default, this method returns the entire category tree for the specified marketplace. You can limit the size of the result set by using the <b>filter</b> query parameter to specify only the category IDs you want to review.<br><br><span class=\"tablenote\"><span style=\"color:#478415\"><strong>Tip:</strong></span> This method can potentially return a very large response payload. eBay recommends that the response payload be compressed by passing in the <b>Accept-Encoding</b> request header and setting the value to <code>gzip</code>.</span>",
        "operationId": "getListingStructurePolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "This query parameter limits the response by returning policy information for only the selected sections of the category tree. Supply <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When you specify a <b>categoryId</b> value, the returned category tree includes the policies for that parent node, plus the policies for any leaf nodes below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b> values and you can specify up to 50 separate category IDs. Separate multiple values with a pipe character ('|'). If you specify more than 50 <code>categoryId</code> values, eBay returns the policies for the first 50 IDs and a warning that not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note that you must URL-encode the parameter list, which results in the following filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketplace_id",
            "in": "path",
            "description": "This path parameter specifies the eBay marketplace for which policy information is retrieved. <br><br>See <a href=\"/api-docs/static/rest-request-components.html#marketpl\" target=\"_blank\">HTTP Request Headers</a> for a list of supported eBay marketplace ID values.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "This header indicates the compression-encoding algorithms the client accepts for the response. This value should be set to <code>gzip</code>. <br><br> For more information, refer to <a href=\"/api-docs/static/rest-request-components.html#HTTP\" target=\"_blank \">HTTP request headers</a>.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingStructurePolicyResponse"
                }
              }
            },
            "x-response-codes": {
              "errors": {
                "46002": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The filter value is invalid. Sample supported values: filter=categoryIds:{catId1|catId2|catId3}."
                },
                "46003": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified categoryId was not found for the marketplace."
                },
                "46004": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Only 50 Category IDs specified in the filter are considered."
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad Request",
            "x-response-codes": {
              "errors": {
                "46001": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified marketplace ID was not found."
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error",
            "x-response-codes": {
              "errors": {
                "46000": {
                  "domain": "API_METADATA",
                  "category": "APPLICATION",
                  "description": "There was a problem with an eBay internal system or process.Contact eBay developer support for assistance."
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope"
            ]
          }
        ]
      }
    },
    "/marketplace/{marketplace_id}/get_negotiated_price_policies": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "This method returns the eBay policies that define the supported negotiated price features (like \"best offer\") for the categories of a specific marketplace.  <br><br>By default, this method returns the entire category tree for the specified marketplace. You can limit the size of the result set by using the <b>filter</b> query parameter to specify only the category IDs you want to review.<br><br><span class=\"tablenote\"><span style=\"color:#478415\"><strong>Tip:</strong></span> This method can potentially return a very large response payload. eBay recommends that the response payload be compressed by passing in the <b>Accept-Encoding</b> request header and setting the value to <code>gzip</code>.</span>",
        "operationId": "getNegotiatedPricePolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "This query parameter limits the response by returning policy information for only the selected sections of the category tree. Supply <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When you specify a <b>categoryId</b> value, the returned category tree includes the policies for that parent node, plus the policies for any leaf nodes below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b> values and you can specify up to 50 separate category IDs. Separate multiple values with a pipe character ('|'). If you specify more than 50 <code>categoryId</code> values, eBay returns the policies for the first 50 IDs and a warning that not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note that you must URL-encode the parameter list, which results in the following filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketplace_id",
            "in": "path",
            "description": "This path parameter specifies the eBay marketplace for which policy information is retrieved.<br><br>See <a href=\"/api-docs/static/rest-request-components.html#marketpl\" target=\"_blank\">HTTP Request Headers</a> for a list of supported eBay marketplace ID values.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "This header indicates the compression-encoding algorithms the client accepts for the response. This value should be set to <code>gzip</code>. <br><br> For more information, refer to <a href=\"/api-docs/static/rest-request-components.html#HTTP\" target=\"_blank \">HTTP request headers</a>.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiatedPricePolicyResponse"
                }
              }
            },
            "x-response-codes": {
              "errors": {
                "46002": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The filter value is invalid. Sample supported values: filter=categoryIds:{catId1|catId2|catId3}."
                },
                "46003": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified categoryId was not found for the marketplace."
                },
                "46004": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Only 50 Category IDs specified in the filter are considered."
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad Request",
            "x-response-codes": {
              "errors": {
                "46001": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified marketplace ID was not found."
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error",
            "x-response-codes": {
              "errors": {
                "46000": {
                  "domain": "API_METADATA",
                  "category": "APPLICATION",
                  "description": "There was a problem with an eBay internal system or process.Contact eBay developer support for assistance."
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope"
            ]
          }
        ]
      }
    },
    "/marketplace/{marketplace_id}/get_return_policies": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "This method returns the eBay policies that define whether or not you must include a return policy for the items you list in the categories of a specific marketplace, plus the guidelines for creating domestic and international return policies in the different eBay categories.  <br><br>By default, this method returns the entire category tree for the specified marketplace. You can limit the size of the result set by using the <b>filter</b> query parameter to specify only the category IDs you want to review.<br><br><span class=\"tablenote\"><span style=\"color:#478415\"><strong>Tip:</strong></span> This method can potentially return a very large response payload. eBay recommends that the response payload be compressed by passing in the <b>Accept-Encoding</b> request header and setting the value to <code>gzip</code>.</span>",
        "operationId": "getReturnPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "This query parameter limits the response by returning policy information for only the selected sections of the category tree. Supply <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When you specify a <b>categoryId</b> value, the returned category tree includes the policies for that parent node, plus the policies for any leaf nodes below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b> values and you can specify up to 50 separate category IDs. Separate multiple values with a pipe character ('|'). If you specify more than 50 <code>categoryId</code> values, eBay returns the policies for the first 50 IDs and a warning that not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note that you must URL-encode the parameter list, which results in the following filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketplace_id",
            "in": "path",
            "description": "This path parameter specifies the eBay marketplace for which policy information is retrieved.<br><br>See <a href=\"/api-docs/static/rest-request-components.html#marketpl\" target=\"_blank\">HTTP Request Headers</a> for a list of supported eBay marketplace ID values.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "This header indicates the compression-encoding algorithms the client accepts for the response. This value should be set to <code>gzip</code>. <br><br> For more information, refer to <a href=\"/api-docs/static/rest-request-components.html#HTTP\" target=\"_blank \">HTTP request headers</a>.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnPolicyResponse"
                }
              }
            },
            "x-response-codes": {
              "errors": {
                "46002": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The filter value is invalid. Sample supported values: filter=categoryIds:{catId1|catId2|catId3}."
                },
                "46003": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified categoryId was not found for the marketplace."
                },
                "46004": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Only 50 Category IDs specified in the filter are considered."
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad Request",
            "x-response-codes": {
              "errors": {
                "46001": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "The specified marketplace ID was not found."
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error",
            "x-response-codes": {
              "errors": {
                "46000": {
                  "domain": "API_METADATA",
                  "category": "APPLICATION",
                  "description": "There was a problem with an eBay internal system or process.Contact eBay developer support for assistance."
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope"
            ]
          }
        ]
      }
    },
    "/country/{countryCode}/sales_tax_jurisdiction": {
      "get": {
        "tags": [
          "country"
        ],
        "description": "This method retrieves all sales-tax jurisdictions for the country specified in the <b>countryCode</b> path parameter. Countries with valid sales-tax jurisdictions are Canada and the US.<br><br>The response from this call tells you the jurisdictions for which a seller can configure tax tables. Although setting up tax tables is optional, you can use the <b>createOrReplaceSalesTax</b> method in the <b>Account API</b> call to configure the tax tables for the jurisdictions into which you sell.<br><br><span class=\"tablenote\"><b>Note:</b> Sales-tax tables are only available for the US (EBAY_US) and Canada (EBAY_CA) marketplaces.</span><br><br><div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span> In the US, eBay now calculates, collects, and remits sales tax to the proper taxing authorities in all 50 states and Washington, DC. Sellers can no longer specify sales-tax rates for these jurisdictions using a tax table.<br><br>However, sellers may continue to use a sales-tax table to set rates for the following US territories:<ul><li>American Samoa (AS)</li><li>Guam (GU)</li><li>Northern Mariana Islands (MP)</li><li>Palau (PW)</li><li>US Virgin Islands (VI)</li></ul>For additional information, refer to <a href=\"https://www.ebay.com/help/selling/fees-credits-invoices/taxes-import-charges?id=4121 \" target=\"_blank\">Taxes and import charges</a>.</p></div>",
        "operationId": "getSalesTaxJurisdictions",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "This path parameter specifies the two-letter <a href=\"https://www.iso.org/iso-3166-country-codes.html \" title=\"https://www.iso.org \" target=\"_blank\">ISO 3166</a> country code for the country whose jurisdictions you want to retrieve.<br><br><span class=\"tablenote\"><b>Note:</b> Sales-tax tables are available only for the US and Canada marketplaces. Therefore, the only supported values are:<ul><li><code>US</code></li><li><code>CA</code></li></ul></span>",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTaxJurisdictions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "x-response-codes": {
              "errors": {
                "45400": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Invalid input. {additionalInfo}"
                },
                "45401": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Invalid {fieldName}."
                },
                "45402": {
                  "domain": "API_METADATA",
                  "category": "REQUEST",
                  "description": "Tax table not supported for {fieldName}."
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "x-response-codes": {
              "errors": {
                "45500": {
                  "domain": "API_METADATA",
                  "category": "APPLICATION",
                  "description": "System error."
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AutomotivePartsCompatibilityPolicy": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "The category ID to which the automotive-parts-compatibility policies apply."
          },
          "categoryTreeId": {
            "type": "string",
            "description": "A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    <br><br>A <i>category tree</i> is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique <b>categoryId</b> value. Within a category tree, the root node has no parent node and <i>leaf nodes</i> are nodes that have no child nodes."
          },
          "compatibilityBasedOn": {
            "type": "string",
            "description": "Indicates whether the category supports parts compatibility by either <code>ASSEMBLY</code> or by <code>SPECIFICATION</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:CompatibilityTypeEnum'>eBay API documentation</a>"
          },
          "compatibleVehicleTypes": {
            "type": "array",
            "description": "Indicates the compatibility classification of the part based on high-level vehicle types.",
            "items": {
              "type": "string",
              "description": " For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:CompatibleVehicleTypeEnum'>eBay API documentation</a>"
            }
          },
          "maxNumberOfCompatibleVehicles": {
            "type": "integer",
            "description": "Specifies the maximum number of compatible vehicle-applications allowed per item.",
            "format": "int32"
          }
        }
      },
      "AutomotivePartsCompatibilityPolicyResponse": {
        "type": "object",
        "properties": {
          "automotivePartsCompatibilityPolicies": {
            "type": "array",
            "description": "A list of category IDs and the automotive-parts-compatibility policies for each of the listed categories.",
            "items": {
              "$ref": "#/components/schemas/AutomotivePartsCompatibilityPolicy"
            }
          },
          "warnings": {
            "type": "array",
            "description": "A list of the warnings that were generated as a result of the request. This field is not returned if no warnings were generated by the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "The category type for this error or warning. It takes an ErrorCategory object which can have one of three values:<ul><li><code>Application</code>: Indicates an exception or error occurred in the application code or at runtime. Examples include catching an exception in a service's business logic, system failures, or request errors from a dependency.</li><li><code>Business</code>: Used when your service or a dependent service refused to continue processing on the resource because of a business rule violation such as \"Seller does not ship item to Antarctica\" or \"Buyer ineligible to purchase an alcoholic item\". Business errors are not syntactical input errors.</li><li><code>Request</code>: Used when there is anything wrong with the request, such as authentication, syntactical errors, rate limiting or missing headers, bad HTTP header values, and so on.</li></ul>"
          },
          "domain": {
            "type": "string",
            "description": "Name of the domain containing the service or application."
          },
          "errorId": {
            "type": "integer",
            "description": "A positive integer that uniquely identifies the specific error condition that occurred. Your application can use error codes as identifiers in your customized error-handling algorithms.",
            "format": "int32"
          },
          "inputRefIds": {
            "type": "array",
            "description": "Identifies specific request elements associated with the error, if any. inputRefId's response is format specific. For JSON, use <i>JSONPath</i> notation.",
            "items": {
              "type": "string"
            }
          },
          "longMessage": {
            "type": "string",
            "description": "An expanded version of message that should be around 100-200 characters long, but is not required to be such."
          },
          "message": {
            "type": "string",
            "description": "An end user and app developer friendly device agnostic message. It explains what the error or warning is, and how to fix it (in a general sense). Its value is at most 50 characters long. If applicable, the value is localized in the end user's requested locale."
          },
          "outputRefIds": {
            "type": "array",
            "description": "Identifies specific response elements associated with the error, if any. Path format is the same as <code>inputRefId</code>.",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "description": "This optional complex field type contains a list of one or more context-specific <code>ErrorParameter</code> objects, with each item in the list entry being a parameter (or input field name) that caused an error condition. Each <code>ErrorParameter</code> object consists of two fields, a <code>name</code> and a <code>value</code>.",
            "items": {
              "$ref": "#/components/schemas/ErrorParameter"
            }
          },
          "subdomain": {
            "type": "string",
            "description": "Name of the domain's subsystem or subdivision. For example, checkout is a subdomain in the buying domain."
          }
        },
        "description": "A container that defines the elements of error and warning messages."
      },
      "ErrorParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the entity that threw the error."
          },
          "value": {
            "type": "string",
            "description": "A description of the error."
          }
        },
        "description": "Container for a error parameter."
      },
      "ExtendedProducerResponsibility": {
        "type": "object",
        "properties": {
          "enabledForVariations": {
            "type": "boolean",
            "description": "An indication of whether the attribute can be enabled for listing variations.<br><br>If the value is <code>true</code>, the attribute may be specified at the variation level."
          },
          "name": {
            "type": "string",
            "description": "The name of the attribute included in the policy. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ExtendedProducerResponsibilityEnum'>eBay API documentation</a>"
          },
          "usage": {
            "type": "string",
            "description": "The usage guidelines for the attribute, in the specified marketplace. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GenericUsageEnum'>eBay API documentation</a>"
          }
        },
        "description": "A type that defines the attributes of an Extended Producer Responsibility policy."
      },
      "ExtendedProducerResponsibilityPolicy": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "The unique identifier for the category under which the policy applies."
          },
          "categoryTreeId": {
            "type": "string",
            "description": "The unique identifier for the category tree under which the policy applies."
          },
          "supportedAttributes": {
            "type": "array",
            "description": "The details regarding the attributes included in the policy, such as their usage guidelines and whether they can be specified at the listing variation level.",
            "items": {
              "$ref": "#/components/schemas/ExtendedProducerResponsibility"
            }
          }
        },
        "description": "A type that defines the Extended Producer Responsibility policy."
      },
      "ExtendedProducerResponsibilityPolicyResponse": {
        "type": "object",
        "properties": {
          "extendedProducerResponsibilities": {
            "type": "array",
            "description": "An array of response fields detailing the Extended Producer Responsibility policies supported for the specified marketplace.",
            "items": {
              "$ref": "#/components/schemas/ExtendedProducerResponsibilityPolicy"
            }
          },
          "warnings": {
            "type": "array",
            "description": "A collection of warnings generated for the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "A type that defines the response fields for the <b>getExtendedProducerResponsibilityPolicies</b> method."
      },
      "HazardStatement": {
        "type": "object",
        "properties": {
          "statementId": {
            "type": "string",
            "description": "The identifier of the statement. For sample values, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Hazard'>Hazard statement sample values</a>."
          },
          "statementDescription": {
            "type": "string",
            "description": "The description of the statement localized to the default language of the marketplace. For sample values, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Hazard'>Hazard statement sample values</a>."
          }
        },
        "description": "A type that describes hazard statements for hazardous materials labels"
      },
      "HazardousMaterialDetailsResponse": {
        "type": "object",
        "properties": {
          "signalWords": {
            "type": "array",
            "description": "This array contains available hazardous materials signal words for the specified marketplace.",
            "items": {
              "$ref": "#/components/schemas/SignalWord"
            }
          },
          "statements": {
            "type": "array",
            "description": "This array contains available hazardous materials hazard statements for the specified marketplace.",
            "items": {
              "$ref": "#/components/schemas/HazardStatement"
            }
          },
          "pictograms": {
            "type": "array",
            "description": "This array contains of available hazardous materials hazard pictograms for the specified marketplace.",
            "items": {
              "$ref": "#/components/schemas/Pictogram"
            }
          }
        },
        "description": "A type that defines the response fields for the <b>getHazardousMaterialsLabels</b> method."
      },
      "ItemCondition": {
        "type": "object",
        "properties": {
          "conditionDescription": {
            "type": "string",
            "description": "The human-readable label for the condition (e.g., \"New\"). This value is typically localized for each site.  <br><br>Note that the display name can vary by category. For example, the description for condition ID <code>1000</code> could be called \"New: with Tags\" in one category and \"Brand New\" in another. For details on condition IDs and descriptions, see <a href='/api-docs/sell/static/metadata/condition-id-values.html'>Item condition ID and name values</a>."
          },
          "conditionDescriptors": {
            "type": "array",
            "description": "This array contains the possible condition descriptors and condition descriptor values applicable for the specified category. It also returns usage requirements, maximum length, cardinality, and help text.<br><br><span class=\"tablenote\"><b>Note:</b> This array is only returned for categories that support condition descriptors.</span>",
            "items": {
              "$ref": "#/components/schemas/ItemConditionDescriptor"
            }
          },
          "conditionHelpText": {
            "type": "string",
            "description": "A detailed description of the condition denoted by the <b>conditionID</b> and <b>conditionDescription</b>. "
          },
          "conditionId": {
            "type": "string",
            "description": "The ID value of the selected item condition. For information on the supported condition ID values, see <a href='/api-docs/sell/static/metadata/condition-id-values.html'>Item condition ID and name values</a>."
          },
          "usage": {
            "type": "string",
            "description": "The value returned in this field indicates if there are any usage restrictions or requirements for the corresponding item condition in the corresponding category.<br><br><span class=\"tablenote\"><b>Note:</b> Currently, the only supported value is 'RESTRICTED', and this field will only be returned for the following conditions: 2000, 2010, 2020, 2030. Sellers must be pre-approved to use any of these item conditions.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:UsageEnum'>eBay API documentation</a>"
          }
        },
        "description": "<span class=\"tablenote\"><b>Note: </b>In all eBay marketplaces, Condition ID 2000 now maps to an item condition of 'Certified Refurbished', and not 'Manufacturer Refurbished'. To list an item as 'Certified Refurbished', a seller must be pre-qualified by eBay for this feature. Any seller who is not eligible for this feature will be blocked if they try to create a new listing or revise an existing listing with this item condition. Any active listings on any eBay marketplace that had 'Manufacturer Refurbished' as the item condition should have been automatically updated by eBay to the 'Seller Refurbished' item condition (Condition ID 2500). <br><br> Any seller that is interested in eligibility requirements to list with 'Certified Refurbished' should see the <a href=\"https://pages.ebay.com/seller-center/listing-and-marketing/certified-refurbished-program.html \" target=\"_blank\">Certified refurbished program</a> page in Seller Center. </span>"
      },
      "ItemConditionDescriptor": {
        "type": "object",
        "properties": {
          "conditionDescriptorConstraint": {
            "description": "This container shows the constraints on a condition descriptor, such as the maximum length, default condition descriptor value ID, cardinality, mode, usage, and applicable descriptor IDs.",
            "$ref": "#/components/schemas/ItemConditionDescriptorConstraint"
          },
          "conditionDescriptorHelpText": {
            "type": "string",
            "description": "A description of the condition descriptor that directs a user to its condition descriptor values.<br><br> For example, the help text for <code>Card Condition</code> is <code>Select ungraded condition</code>."
          },
          "conditionDescriptorId": {
            "type": "string",
            "description": "The unique identification number of a condition descriptor associated with with a <b>conditionDescriptorName</b>. <br><br>For example, <code>40001</code> is the ID for <code>Card Condition</code>.<br><br>These IDs are used in the addItem family of calls of the <b>Trading API</b> to provide condition descriptor names for the item. These IDs are used by the inventoryItem family of calls of the <b>Inventory API</b> to provide condition descriptor names for the item."
          },
          "conditionDescriptorName": {
            "type": "string",
            "description": "The human-readable label for the condition descriptor associated with the <b>conditionDescriptorID</b>. <br><br>For example, <code>Card Condition</code> is the condition descriptor name for ID <code>40001</code>"
          },
          "conditionDescriptorValues": {
            "type": "array",
            "description": "This array shows the possible values that map to the corresponding <b>conditionDescriptorName</b> values. Constraint information and help text are also shown for each value. <br><br>For example, The ID <code>40001</code> is ID for the condition descriptor <code>card condition</code>. The ID <code>400012</code> is the ID for the <code>Very Good</code> card condition value.",
            "items": {
              "$ref": "#/components/schemas/ItemConditionDescriptorValue"
            }
          }
        },
        "description": "This type is used to display the possible condition descriptors and condition values applicable for a specified category. It also returns usage requirements, maximum length, cardinality, and help text."
      },
      "ItemConditionDescriptorConstraint": {
        "type": "object",
        "properties": {
          "applicableToConditionDescriptorIds": {
            "type": "array",
            "description": "This array is returned if the corresponding condition descriptor requires that one or more other associated condition descriptors must also be specified in a listing. The condition descriptor IDs for the associated condition descriptors are returned here.<br><br>For example, the <code>Grade</code> and <code>Grader</code> condition descriptors must always be specified together in a listing for Graded cards.",
            "items": {
              "type": "string"
            }
          },
          "cardinality": {
            "type": "string",
            "description": "The value returned in this field indicates whether a condition descriptor can have a single value or multiple values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:CardinalityEnum'>eBay API documentation</a>"
          },
          "defaultConditionDescriptorValueId": {
            "type": "string",
            "description": "The default condition descriptor value that will be set if there are multiple values."
          },
          "maxLength": {
            "type": "integer",
            "description": "The maximum characters allowed for a condition descriptor. This field is only returned/applicable for condition descriptors that allow free text for condition descriptor values. ",
            "format": "int32"
          },
          "mode": {
            "type": "string",
            "description": "The value returned in this field indicates whether the supported values for a condition descriptor are predefined or if the seller manually specified the value.<br><br><span class=\"tablenote\"><b>Note:</b> <code>FREE_TEXT</code> is currently only applicable to the Certification Number condition descriptor.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ModeEnum'>eBay API documentation</a>"
          },
          "usage": {
            "type": "string",
            "description": "This value indicates whether or not the condition descriptor is required for the item condition. Currently, this field is only returned if the condition descriptor is required for the item condition. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:DescriptorUsageEnum'>eBay API documentation</a>"
          }
        },
        "description": "This type specifies the constraints on a condition descriptor, such as the maximum length, default condition descriptor value ID, cardinality, mode, usage, and applicable descriptor IDs."
      },
      "ItemConditionDescriptorValue": {
        "type": "object",
        "properties": {
          "conditionDescriptorValueAdditionalHelpText": {
            "type": "array",
            "description": "Additional information about the the condition of the item that is not included in the <b>conditionDescriptorValueHelpText</b> field.",
            "items": {
              "type": "string"
            }
          },
          "conditionDescriptorValueConstraints": {
            "type": "array",
            "description": "The constraints on a condition descriptor value, such as which descriptor value IDs and Descriptor ID it is associated with.",
            "items": {
              "$ref": "#/components/schemas/ItemConditionDescriptorValueConstraint"
            }
          },
          "conditionDescriptorValueHelpText": {
            "type": "string",
            "description": "A detailed description of the condition descriptor value. "
          },
          "conditionDescriptorValueId": {
            "type": "string",
            "description": "The unique identification number of a condition descriptor value associated with the <b>conditionDescriptorValueName</b>."
          },
          "conditionDescriptorValueName": {
            "type": "string",
            "description": "The human-readable label for the condition descriptor value associated with the <b>conditionDescriptorValueID</b>."
          }
        },
        "description": "This type displays the possible values for the corresponding condition descriptor, along with help text and constraint information."
      },
      "ItemConditionDescriptorValueConstraint": {
        "type": "object",
        "properties": {
          "applicableToConditionDescriptorId": {
            "type": "string",
            "description": "This string is returned if the corresponding condition descriptor value requires an associated condition descriptor that must also be specified in a listing. The condition descriptor ID for the associated condition descriptors is returned here."
          },
          "applicableToConditionDescriptorValueIds": {
            "type": "array",
            "description": "This array is returned if the corresponding condition descriptor value is required for one or more associated condition descriptor values that must also be specified in a listing. The condition descriptor values IDs for the associated condition descriptor values are returned here.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "This type shows the constraints on a condition descriptor value, such as any associated condition descriptor ID and condition descriptor value IDs required for a listing."
      },
      "ItemConditionPolicy": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "The category ID to which the item-condition policy applies."
          },
          "categoryTreeId": {
            "type": "string",
            "description": "A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    <br><br>A <i>category tree</i> is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique <b>categoryId</b> value. Within a category tree, the root node has no parent node and <i>leaf nodes</i> are nodes that have no child nodes."
          },
          "itemConditionRequired": {
            "type": "boolean",
            "description": "This flag denotes whether or not you must list the item condition in a listing for the specified category. If set to <code>true</code>, you must specify an item condition for the associated category."
          },
          "itemConditions": {
            "type": "array",
            "description": "The item-condition values allowed in the category.<br><br><span class=\"tablenote\"><b>Note:</b> The ‘Seller Refurbished’ item condition (condition ID 2500) has been replaced by the 'Excellent - Refurbished', 'Very Good - Refurbished', and 'Good - Refurbished' item conditions in a select number of eBay marketplaces and categories. See the <a href=\"/api-docs/sell/static/metadata/condition-id-values.html#Category \" target=\"_blank \"> eBay Refurbished Program - Category and marketplace support</a> topic for more details.<br/><br/>Similar to the ‘Certified Refurbished’ item condition (condition ID 2000), a seller’s OAuth user token will have to be used instead of an OAuth application token, since each seller must  go through an application and qualification process before using any of these new refurbished item conditions in supported categories. If a seller is not qualified to use the new refurbished item conditions, these item condition values will not be returned by <b>getItemConditionPolicies</b>.</span>",
            "items": {
              "$ref": "#/components/schemas/ItemCondition"
            }
          }
        }
      },
      "ItemConditionPolicyResponse": {
        "type": "object",
        "properties": {
          "itemConditionPolicies": {
            "type": "array",
            "description": "A list of category IDs and the policies for how to indicate an item's condition in each of the listed categories.",
            "items": {
              "$ref": "#/components/schemas/ItemConditionPolicy"
            }
          },
          "warnings": {
            "type": "array",
            "description": "A list of the warnings that were generated as a result of the request. This field is not returned if no warnings were generated by the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ListingStructurePolicy": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "The category ID to which the listing-structure policy applies."
          },
          "categoryTreeId": {
            "type": "string",
            "description": "A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    <br><br>A <i>category tree</i> is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique <b>categoryId</b> value. Within a category tree, the root node has no parent node and <i>leaf nodes</i> are nodes that have no child nodes."
          },
          "variationsSupported": {
            "type": "boolean",
            "description": "This flag denotes whether or not the associated category supports listings with item variations. If set to <code>true</code>, the category does support item variations."
          }
        }
      },
      "ListingStructurePolicyResponse": {
        "type": "object",
        "properties": {
          "listingStructurePolicies": {
            "type": "array",
            "description": "Returns a list of category IDs plus a flag indicating whether or not each listed category supports item variations.",
            "items": {
              "$ref": "#/components/schemas/ListingStructurePolicy"
            }
          },
          "warnings": {
            "type": "array",
            "description": "A list of the warnings that were generated as a result of the request. This field is not returned if no warnings were generated by the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NegotiatedPricePolicy": {
        "type": "object",
        "properties": {
          "bestOfferAutoAcceptEnabled": {
            "type": "boolean",
            "description": "This flag denotes whether or not the category supports the setting of a price at which best offers are automatically accepted. If set to <code>true</code>, the category does support the setting of an automatic price for best-offers."
          },
          "bestOfferAutoDeclineEnabled": {
            "type": "boolean",
            "description": "This flag denotes whether or not the category supports the setting of an auto-decline price for best offers. If set to <code>true</code>, the category does support the setting of an automatic-decline price for best-offers."
          },
          "bestOfferCounterEnabled": {
            "type": "boolean",
            "description": "This flag denotes whether or not the category supports the setting for an automatic counter-offer on best offers. If set to <code>true</code>, the category does support the setting of an automatic counter-offer price for best-offers."
          },
          "categoryId": {
            "type": "string",
            "description": "The category ID to which the negotiated-price policies apply."
          },
          "categoryTreeId": {
            "type": "string",
            "description": "A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    <br><br>A <i>category tree</i> is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique <b>categoryId</b> value. Within a category tree, the root node has no parent node and <i>leaf nodes</i> are nodes that have no child nodes."
          }
        }
      },
      "NegotiatedPricePolicyResponse": {
        "type": "object",
        "properties": {
          "negotiatedPricePolicies": {
            "type": "array",
            "description": "A list of category IDs and the policies related to negotiated-price items for each of the listed categories.",
            "items": {
              "$ref": "#/components/schemas/NegotiatedPricePolicy"
            }
          },
          "warnings": {
            "type": "array",
            "description": "A list of the warnings that were generated as a result of the request. This field is not returned if no warnings were generated by the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Pictogram": {
        "type": "object",
        "properties": {
          "pictogramId": {
            "type": "string",
            "description": "The identifier of the pictogram. For sample values, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Pictogra'>Pictogram sample values</a>."
          },
          "pictogramDescription": {
            "type": "string",
            "description": "The description of the pictogram localized to the default language of the marketplace. For sample values, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Pictogra'>Pictogram sample values</a>."
          },
          "pictogramUrl": {
            "type": "string",
            "description": "The URL of the pictogram."
          }
        },
        "description": "A type that describes pictograms for hazardous materials labels."
      },
      "ReturnPolicy": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "The category ID to which the return policies apply."
          },
          "categoryTreeId": {
            "type": "string",
            "description": "A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    <br><br>A <i>category tree</i> is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique <b>categoryId</b> value. Within a category tree, the root node has no parent node and <i>leaf nodes</i> are nodes that have no child nodes."
          },
          "domestic": {
            "description": "This complex type defines the category policies related to domestic item returns.",
            "$ref": "#/components/schemas/ReturnPolicyDetails"
          },
          "international": {
            "description": "This complex type defines the category policies related to international item returns.",
            "$ref": "#/components/schemas/ReturnPolicyDetails"
          },
          "required": {
            "type": "boolean",
            "description": "If set to <code>true</code>, this flag indicates that you must specify a return policy for items listed in the associated category.  <br><br>Note that not accepting returns (setting <b>returnsAcceptedEnabled</b> to <code>false</code>) is a valid return policy."
          }
        }
      },
      "ReturnPolicyDetails": {
        "type": "object",
        "properties": {
          "policyDescriptionEnabled": {
            "type": "boolean",
            "description": "If set to <code>true</code>, this flag indicates you can supply a detailed return policy description within your return policy (for example, by populating the <b>returnInstructions</b> field in the Account API's <b>createReturnPolicy</b>). User-supplied return policy details are allowed only in the DE, ES, FR, and IT marketplaces."
          },
          "refundMethods": {
            "type": "array",
            "description": "A list of refund methods allowed for the associated category.",
            "items": {
              "type": "string",
              "description": " For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:RefundMethodEnum'>eBay API documentation</a>"
            }
          },
          "returnMethods": {
            "type": "array",
            "description": "A list of return methods allowed for the associated category.",
            "items": {
              "type": "string",
              "description": " For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ReturnMethodEnum'>eBay API documentation</a>"
            }
          },
          "returnPeriods": {
            "type": "array",
            "description": "A list of return periods allowed for the associated category.  <br><br>Note that different APIs require you to enter the return period in different ways. For example, the Account API uses the complex <b>TimeDuration</b> type, which takes two values (a <b>unit</b> and a <b>value</b>), whereas the Trading API takes a single value (such as <code>Days_30</code>).",
            "items": {
              "$ref": "#/components/schemas/TimeDuration"
            }
          },
          "returnsAcceptanceEnabled": {
            "type": "boolean",
            "description": "If set to <code>true</code>, this flag indicates the seller can configure how they handle domestic returns."
          },
          "returnShippingCostPayers": {
            "type": "array",
            "description": "A list of allowed values for who pays for the return shipping cost.  <br><br>Note that for SNAD returns, the seller is always responsible for the return shipping cost.",
            "items": {
              "type": "string",
              "description": " For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ReturnShippingCostPayerEnum'>eBay API documentation</a>"
            }
          }
        },
        "description": "This container defines the category policies that relate to domestic and international return policies (the return shipping is made via a domestic or an international shipping service, respectively)."
      },
      "ReturnPolicyResponse": {
        "type": "object",
        "properties": {
          "returnPolicies": {
            "type": "array",
            "description": "A list of elements, where each contains a category ID and a flag that indicates whether or not listings in that category require a return policy.",
            "items": {
              "$ref": "#/components/schemas/ReturnPolicy"
            }
          },
          "warnings": {
            "type": "array",
            "description": "A list of the warnings that were generated as a result of the request. This field is not returned if no warnings were generated by the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "SalesTaxJurisdiction": {
        "type": "object",
        "properties": {
          "salesTaxJurisdictionId": {
            "type": "string",
            "description": "The unique ID for a sales-tax jurisdiction.<br><br><div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span> When <code>countryCode</code> is set to <code>US</code>, IDs for all 50 states, Washington, DC, and all US territories will be returned. However, the only <code>salesTaxJurisdictionId</code> values currently supported are:<ul><li><code>AS</code> (American Samoa)</li><li><code>GU</code> (Guam</li><li><code>MP</code> Northern Mariana Islands</li><li><code>PW (Palau)</li><li><code>VI</code> (US Virgin Islands)</li></ul></p></div>"
          }
        },
        "description": "A unique ID for a sales tax jurisdiction."
      },
      "SalesTaxJurisdictions": {
        "type": "object",
        "properties": {
          "salesTaxJurisdictions": {
            "type": "array",
            "description": "A list of sales-tax jurisdictions.",
            "items": {
              "$ref": "#/components/schemas/SalesTaxJurisdiction"
            }
          }
        },
        "description": "This complex type contains a list of sales-tax jurisdictions."
      },
      "SignalWord": {
        "type": "object",
        "properties": {
          "signalWordId": {
            "type": "string",
            "description": "The identifier of the signal word. For more information, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Signal'>Signal word information</a>."
          },
          "signalWordDescription": {
            "type": "string",
            "description": "The description of the signal word localized to the default language of the marketplace. For more information, see <a href='/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Signal'>Signal word information</a>."
          }
        },
        "description": "A type that describes signal words for hazardous materials labels."
      },
      "TimeDuration": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "A time-measurement unit that specifies a singular period of time.  <br><br>A span of time is defined when you apply the value specified in the <b>value</b> field to the value specified for <b>unit</b>.  <br><br>Time-measurement units can be YEAR, MONTH, DAY, and so on. See <b>TimeDurationUnitEnum</b> for a complete list of possible time-measurement units. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/ba:TimeDurationUnitEnum'>eBay API documentation</a>"
          },
          "value": {
            "type": "integer",
            "description": "An integer that represents an amount of time, as measured by the time-measurement unit specified in the <b>unit</b> field.",
            "format": "int32"
          }
        },
        "description": "A complex type that specifies a period of time using a specified time-measurement unit."
      }
    },
    "securitySchemes": {
      "api_auth": {
        "type": "oauth2",
        "description": "The security definitions for this API. Please check individual operations for applicable scopes.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.ebay.com/identity/v1/oauth2/token",
            "scopes": {
              "https://api.ebay.com/oauth/api_scope": "View public data from eBay"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://auth.ebay.com/oauth2/authorize",
            "tokenUrl": "https://api.ebay.com/identity/v1/oauth2/token",
            "scopes": {
              "https://api.ebay.com/oauth/api_scope/sell.inventory": "View and manage your inventory and offers"
            }
          }
        }
      }
    }
  }
}